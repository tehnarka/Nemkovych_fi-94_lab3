// Lab_3.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include <string>

using namespace std;
int m = 419;
string p;
string Add(string a, string b) {
    int m = max(a.size(), b.size());
    for (int i = a.size(); i < m; i++)
    {
        a = "0" + a;
    }
    for (int i = b.size(); i < m; i++)
    {
        b = "0" + b;
    }
    string c = "";
    for (int i = 0; i < m; i++)
    {
        if (a[i] == b[i]) {
            c = c + "0";
        }
        else {
            c = c + "1";
        }
    }
    return c;
}

string Mod(string a, string p) {
    
        a = a.erase(0, a.find_first_not_of('0'));
    string x, y;
    while (a.size()>=p.size())
    {
        x = p;
        for (int i = 0; i < a.size()-p.size(); i++)
        {
            x = x + "0";
        }
        a = Add(a, x);
        a = a.erase(0, a.find_first_not_of('0'));
    }
    if (a.size() <= m) {
        for (int i = a.size(); i < m; i++)
        {
            a = "0" + a;
        }
    }
    return a;
}

string Mult(string a, string b, string p) {
    string res = "0";
    for (int i = m-1; i >= 0; i--)
    { 
        if (a[i] == '1') {
           
            res = Add(res, b);
        }
        b = b + "0";
    }
    if (res.size()>m){
        res = Mod(res, p);
    }
    return res;
}

string Sq(string a, string p) {
    for (int i = m-1; i > 0; i--)
    {
        a = a.insert(i, "0");
    }
    a = Mod(a, p);
    return a;
}

string Inv(string a, string p) {
    string d = a;
    for (int i = 1; i < m-1; i++)
    {
        d = Sq(d, p);
        a = Mult(a, d, p);
    }
    a = Sq(a, p);
    return a;
}

char Tr(string a, string p) {
    string t=a;
    for (int i = 0; i < m-1; i++)
    {
        a = Sq(a, p);
        t = Add(t, a);
    }

    return t[m-1];
}

string Pow(string a, string b, string p) {
    string o = "1";
    for (int i = 0; i < m; i++)
    {
        o = "0"+ o ;
    }
    reverse(b.begin(), b.end());
    for (int j = m - 1; j >= 0; j--)
    {
        if (b[j] == '1') {
            o = Mult(a, o,p);
        }
        if (j != 0) {
            o = Sq(o,p);
        }
    }
    return o;
}

void EXPECT_EQ(const string A, string B,  string TestName)
{
    cout << "TEST " << TestName << endl;
    if (A == B )
    {
        cout << "[ OK ] A equal B " << endl;
    }
    else
    {
        cout << "[ ERROR ] A not equal B " << endl;
    }
}

void AddTest(string p) {

    string B("11100111010110010100011100111010001001111011111101110000010111010000001110011011011100101011110011101101110100110001101110110011101010110011100111001101101100010010010010100011111111010101011000011010110010111000001100010011101010110010010010000011001010111101000000100010100000001001110000110011100011111011000101111011100010001111110001111111000000000011110001010111101100010011011110100000011110100011111001111111000");

    string A("10011010101001110111110001010001011000000101010110011000010000010011011000111000001110000000010000111111100111101100010111000111100111010001101101110100101111110000100111010101110000111111011011000100111010010110100100100101000001010101101101100011011101110010101100111010011101100000001010100111010110000101101000101101100001001111100000001010101000110100111110110100100011100010101111101010010011100111111001010101101");
    string C("11011010101000010101000011011001010001101101101111101001111001100011000001001010010111110110111010101010110010010010000001101110000001110111011101110011001010111111011010010000100000001100001100101100111111101011000111100111100111110101010111010101101001100010001111100111001000100000111101001011001100010101001100111000001110110110110001011110011000101101000101101101000110010110010001100001110100001001111001001111111");
    string D,M,L,K,N;
    
    L = Add(A, B);
    D = Mult(L,C,p);
    M = Mult(B,C,p);
    K = Mult(C, A,p);
    N = Add(M, K);

    EXPECT_EQ(D, N,   "AddTest");
}


void SecondTest(string p) {
    string A("10011010101001110111110001010001011000000101010110011000010000010011011000111000001110000000010000111111100111101100010111000111100111010001101101110100101111110000100111010101110000111111011011000100111010010110100100100101000001010101101101100011011101110010101100111010011101100000001010100111010110000101101000101101100001001111100000001010101000110100111110110100100011100010101111101010010011100111111001010101101");
    string v = "";
    string N,s;

    for (int i = 0; i < m; i++)
    {
        v = v + "1";
    }
    for (int i = 0; i < m-1; i++)
    {
        s = s + "0";
    }
    s = s + "1";
    N=Pow(A, v,p);
    EXPECT_EQ(s, N, "SecondTest");
}


int main()
{
    string p = "";
    for (int i = 0; i < m+1; i++)
    {
        if (i == 0 || i == 1 || i == 14 || i == 21 || i == 419) {
            p = "1"+ p;
        }
        else { 
            p = "0"+ p;
        }
    
    }
    string a, b, c,n;
    a = "10100110000000001110001111100001111011011110101101010101000100110011001011011011001001010000000101110111100000100100111010111001001010001011010000010010100101111010001001111110101000010111100111000000000001111010110010000000100100000000111110110111111100000111111111100010110101110111010110111000001001010000110101000101101011010000011101011001011001011010010110100000111101101011111111011100100001101101100100100100001";
    b = "10010111111101100010010011111001100011101001110110010101010001001111101000111111010101110100001011111101101101111100100011100011001100000110001100001001101100010100101000011110110010000010111001010100011111100010000111111011111111010101001111101011001100000000010011110111111000111011111100111010101001010001011110001101000011001000001001000100001110011101011001111101101111110010100010101010101000001001100001000110101";
    n = "01010100110010010110101000010001001110010010110001001010000010011100000101000100110100110110101100011110000011101101100010011010100100100111001100011001100110000001010111001100011011110111111001100101000111100110111101111011000100001101111101111110110010011100011001110101100001111100111011001000001110010010100110001111101101000001011101000011111000010111110011110010101001111111101001100110010101010000000000111001101";
   // a = "01011011000011101111010010100000110111001001110000000101001000001010101000110001111001000101011011101100110010101110100001100000000101100111000110000000001000110100111111001";
   // b = "11011100001011000000111011001100001100100101010000110001010100100111011110011011101101000001100000111000100010010000001111100000101101010001011101111011110100011100101011111";
  /* cout << "Lab_3" << endl;
   cout << "A+B = " << Add(a, b) << endl;
    cout << "A*B = "<<Mult(a, b, p) << endl;
    cout << "A^2 = "<<Sq(a, p)<<endl;
    cout << "Trace : "<<Tr(a, p) << endl;
    cout << "A^(-1)"<<Inv(a, p) << endl;
     cout << "A^N = "<<Pow(a, n, p) << endl;
     */
    AddTest(p);
    SecondTest(p);
}


